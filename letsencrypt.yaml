apiVersion: v1
kind: List
metadata: {}
items:
- kind: "DeploymentConfig"
  apiVersion: "v1"
  metadata:
    name: "letsencrypt"
  spec:
    selector:
      name: letsencrypt
      deploymentconfig: letsencrypt
    template:
      metadata:
        labels:
          name: letsencrypt
          deploymentconfig: letsencrypt
      spec:
        volumes:
        - name: letsencrypt-data
          persistentVolumeClaim:
            claimName: letsencrypt-data
        serviceAccountName: letsencrypt
        containers:
          - name: "letsencrypt"
            image: "ausnimbus/openshift-letsencrypt:latest"
            env:
              -
                name: ROUTER_CNAME
                value: ap-southeast-2.ausnimbus.com.au
          volumeMounts:
          - name: letsencrypt-data
            mountPath: "/var/lib/letsencrypt"
      replicas: 1
      triggers:
        - type: "ConfigChange"
      strategy:
        type: "Rolling"
      paused: false
      revisionHistoryLimit: 1
      minReadySeconds: 0
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: letsencrypt-data
    annotations:
      volume.alpha.kubernetes.io/storage-class: "dynamic"
    creationTimestamp:
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
- kind: Route
  apiVersion: v1
  metadata:
    name: letsencrypt
    creationTimestamp:
    labels:
      app: letsencrypt
  spec:
    host: ''
    to:
      kind: Service
      name: letsencrypt
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    port:
      targetPort: 8080-tcp
- kind: Service
  apiVersion: v1
  metadata:
    name: letsencrypt
    creationTimestamp:
    labels:
      app: letsencrypt
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      name: letsencrypt
      deploymentconfig: letsencrypt
    type: ClusterIP
    sessionAffinity: None
